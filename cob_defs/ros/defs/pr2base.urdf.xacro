<?xml version="1.0"?>
<robot xmlns:sensor="http://playerstage.sourceforge.net/gazebo/xmlschema/#sensor"
       xmlns:controller="http://playerstage.sourceforge.net/gazebo/xmlschema/#controller"
       xmlns:interface="http://playerstage.sourceforge.net/gazebo/xmlschema/#interface">

  <include filename="$(find cob_defs)/ros/defs/pr2base_gazebo.xacro" />
  <include filename="$(find cob_defs)/ros/defs/pr2base_transmission.xacro" />

  <property name="M_PI" value="3.1415926535897931" />

  <property name="caster_wheel_offset_y" value="0.049" /> <!-- from function spreadsheet -->
  <property name="wheel_length" value="0.03" />  <!-- FIXME -->
  <property name="wheel_radius" value="0.074792" />   <!-- This is the 'effective' wheel radius. Wheel radius for uncompressed wheel is 0.079.  mp 20080801 -->

  <!-- based on 090224_link_data from function engineering -->
  <property name="base_cg_x" value="-0.061" />
  <property name="base_cg_y" value="0.0" />
  <property name="base_cg_z" value="0.293" />
  <property name="base_mass" value="116.0" />

  <!-- simplified box collision geometry for base -->
  <property name="base_size_x" value="0.65" />
  <property name="base_size_y" value="0.65" />
  <property name="base_size_z" value="0.23" />
  <property name="base_collision_size_z" value="0.04" />
  <!-- simplified box collision geometry for hokuyo laser -->
  <property name="base_laser_x" value="0.275" />
  <property name="base_laser_y" value="0.0" />
  <property name="base_laser_z" value="0.252" />
  <property name="base_laser_size_x" value="0.06" />
  <property name="base_laser_size_y" value="0.06" />
  <property name="base_laser_size_z" value="0.03" />
  <property name="base_laser_collision_offset_z" value="0.023" />

  <macro name="pr2_wheel" params="suffix parent reflect">

    <joint name="${parent}_${suffix}_wheel_joint" type="continuous">
      <axis xyz="0 1 0" />
      <limit effort="100" velocity="100"/>
      <safety_controller k_velocity="10" />
      <dynamics damping="0.0" friction="0.0" />
      <origin xyz="0 ${reflect*caster_wheel_offset_y} 0" rpy="0 0 0" />
      <parent link="${parent}_rotation_link"/>
      <child link="${parent}_${suffix}_wheel_link"/>
    </joint>
    <link name="${parent}_${suffix}_wheel_link">
      <inertial>
        <mass value="0.44036" /> <!-- check jmh 20081205 -->
        <origin xyz=" 0 0 0 " />
        <inertia  ixx="0.012411765597" ixy="-0.000711733678" ixz="0.00050272983"
                  iyy="0.015218160428" iyz="-0.000004273467" izz="0.011763977943" />
      </inertial>
      <visual>
        <origin xyz="0 0 0" rpy="0 0 0" />
        <geometry>
          <mesh filename="package://pr2_defs/meshes/pr2_wheel.stl" />
        </geometry>

        <material name="Caster_${suffix}" />
      </visual>
      <collision>
        <origin xyz="0 0 0" rpy="${M_PI/2} 0 0" />
        <geometry>
          <cylinder radius="${wheel_radius}" length="${wheel_length}" />
        </geometry>
      </collision>
    </link>

    <!-- extensions -->
    <pr2_wheel_gazebo parent="${parent}" suffix="${suffix}" />
    <pr2_wheel_transmission parent="${parent}" suffix="${suffix}" reflect="${reflect}" />

  </macro>

  <macro name="pr2_caster" params="suffix parent *origin">

    <joint name="${suffix}_caster_rotation_joint" type="continuous">
      <axis xyz="0 0 1" />
      <limit effort="100" velocity="100"/>
      <safety_controller k_velocity="10" />
      <!-- hold both reference_position and upper/lower for tick-tock, remove reference_positiion after verifying upper/lower works with calibration controllers.  if search velocity in pr2_calibration_controllers.yaml is +, the reference_position is rising, if - then it is falling -->
      <calibration reference_position="0.0" rising="0.0" />
      <dynamics damping="0.0" friction="0.0" />
      <insert_block name="origin"/>
      <parent link="${parent}"/>
      <child link="${suffix}_caster_rotation_link"/>
    </joint>
    <link name="${suffix}_caster_rotation_link">

      <inertial>
        <mass value="3.473082" />
        <origin xyz="0 0 0.07" />
        <inertia  ixx="0.012411765597" ixy="-0.000711733678" ixz="0.00050272983"
                  iyy="0.015218160428" iyz="-0.000004273467" izz="0.011763977943" />
      </inertial>

      <visual>
        <origin xyz="0 0 0" rpy="0 0 0" />
        <geometry>
        	<box size="0.1 0.1 0.1" />
<!--          <mesh filename="package://pr2_defs/meshes/caster.stl" /> -->
        </geometry>
        
        <material name="Green" />
      </visual>

      <collision>
        <origin xyz="0 0 0.07" rpy="0.0 0.0 0.0" />
        <geometry>
          <box size="0.192 0.164 0.013" />
        </geometry>
      </collision>
    </link>

    <!-- extensions -->
    <pr2_caster_transmission suffix="${suffix}" />

    <!-- wheel macros -->
    <pr2_wheel parent="${suffix}_caster" suffix="l" reflect="1" />
    <pr2_wheel parent="${suffix}_caster" suffix="r" reflect="-1" />

  </macro>


  <property name="caster_offset_x" value="0.2225" />
  <property name="caster_offset_y" value="0.2225" />
  <property name="caster_offset_z" value="0.0282" />

  <macro name="pr2_base" params="name">
    <link name="${name}_link">

      <inertial>
        <mass value="${base_mass}" />
        <origin xyz="${base_cg_x} ${base_cg_y} ${base_cg_z}" />
        <inertia ixx="5.652232699207" ixy="-0.009719934438" ixz="1.293988226423"
                 iyy="5.669473158652" iyz="-0.007379583694" izz="3.683196351726" />
      </inertial>

      <visual>
        <origin xyz="0 0 0" rpy="0 0 0" />
        <geometry>
          <mesh filename="package://cob_defs/common/files/meshes/platform.stl"/>
        </geometry>
        <material name="Green" />
      </visual>

      <collision>
        <!-- represent base collision with a simple rectangular model, positioned by base_size_z s.t. top
             surface of the collision box matches the top surface of the PR2 base -->
        <origin xyz="0 0 ${base_size_z-base_collision_size_z/2}" rpy="0 0 0" />
        <geometry>
          <box size="${base_size_x} ${base_size_y} ${base_collision_size_z}" />
        </geometry>
      </collision>
    </link>

    <!-- base_footprint is a fictitious link(frame) that is on the ground right below base_link origin,
         navigation stack dedpends on this frame -->
    <link name="${name}_footprint">
      <inertial>
        <mass value="1.0" />
        <origin xyz="0 0 0" />
        <inertia ixx="0.01" ixy="0.0" ixz="0.0"
                 iyy="0.01" iyz="0.0" izz="0.01" />
      </inertial>
      <visual>
        <origin xyz="0 0 0" rpy="0 0 0" />
        <geometry>
          <box size="0.01 0.01 0.01" />
        </geometry>
        
        <material name="Green" />
      </visual>
      <collision>
        <!-- represent base collision with a simple rectangular model, positioned by base_size_z s.t. top
             surface of the collision box matches the top surface of the PR2 base -->
        <origin xyz="0 0 ${0.051+base_collision_size_z/2}" rpy="0 0 0" />
        <geometry>
          <box size="0.001 0.001 0.001" />
        </geometry>
      </collision>
    </link>

    <joint name="${name}_footprint_joint" type="fixed">
      <origin xyz="0 0 0.051" rpy="0 0 0" />
      <child link="${name}_link" />
      <parent link="${name}_footprint"/>
    </joint>
    
    <!-- cob3 torso -->
  	<link name="link_neck">
		<inertial>
			<origin xyz="0 0 0" rpy="0 0 0"/>
			<mass value="1"/>
			<inertia ixx="1"  ixy="0"  ixz="0" iyy="1" iyz="0" izz="1" />
		</inertial>
		<visual>
			<origin xyz="0 0 0" rpy="0 0 0" />
			<geometry>
				<mesh filename="package://cob_defs/common/files/meshes/neck.stl" />
			</geometry>
		</visual>
		<collision>
			<origin xyz="0 0 0" rpy="0 0 0" />
			<geometry>
				<mesh filename="package://cob_defs/common/files/meshes/neck.stl"/>
			</geometry>
		</collision>
	</link>
	
	<gazebo reference="link_neck">
		<material>PR2/Green</material>
		<turnGravityOff>false</turnGravityOff>
	</gazebo>
	
	<link name="link_head">
		<inertial>
			<origin xyz="0 0 0" rpy="0 0 0"/>
			<mass value="1"/>
			<inertia ixx="1"  ixy="0"  ixz="0" iyy="1" iyz="0" izz="1" />
		</inertial>
		<visual>
			<origin xyz="0 0 0" rpy="0 0 0" />
			<geometry>
				<mesh filename="package://cob_defs/common/files/meshes/head.stl" />
			</geometry>
		</visual>
		<collision>
			<origin xyz="0 0 0" rpy="0 0 0" />
			<geometry>
				<mesh filename="package://cob_defs/common/files/meshes/head.stl"/>
			</geometry>
		</collision>
	</link>

	<gazebo reference="link_head">
		<material>PR2/Green</material>
		<turnGravityOff>false</turnGravityOff>
	</gazebo>
	
	<joint name="joint_base_neck" type="fixed">
		<origin xyz="0.24627 0 0.7798" rpy="0 0 0" />
		<parent link="base_link"/>
		<child link="link_neck"/>
	</joint>

	<joint name="joint_neck_head" type="fixed">
		<origin xyz="-0.09039 0 0.30489" rpy="0 0 0" />
		<parent link="link_neck"/>
		<child link="link_head"/>
	</joint>

    <!-- base laser -->
    <joint name="base_laser_joint" type="fixed">
      <origin xyz="${base_laser_x} ${base_laser_y} ${base_laser_z}" rpy="0 0 0" />
      <parent link="${name}_link"/>
      <child link="base_laser_link"/>
    </joint>
    <link name="base_laser_link" type="laser">

      <inertial>
        <mass value="1.0" />
        <origin xyz="0 0 0" />
        <inertia ixx="0.1" ixy="0" ixz="0" iyy="0.1" iyz="0" izz="0.1" />
      </inertial>

      <visual>
        <origin xyz="0 0 ${base_laser_collision_offset_z}" rpy="0 0 0" />
        <geometry>
          <box size="${base_laser_size_x} ${base_laser_size_y} ${base_laser_size_z}"/>
        </geometry>
        
        <material name="Red" />
      </visual>

      <collision>
        <origin xyz="0 0 ${base_laser_collision_offset_z}" rpy="0 0 0" />
        <geometry>
          <box size="${base_laser_size_x} ${base_laser_size_y} ${base_laser_size_z}"/>
        </geometry>
      </collision>

    </link>


    <pr2_caster suffix="fl" parent="${name}_link">
      <origin xyz="${caster_offset_x} ${caster_offset_y} ${caster_offset_z}" rpy="0 0 0" />
    </pr2_caster>
    <pr2_caster suffix="fr" parent="${name}_link">
      <origin xyz="${caster_offset_x} ${-caster_offset_y} ${caster_offset_z}" rpy="0 0 0" />
    </pr2_caster>
    <pr2_caster suffix="bl" parent="${name}_link">
      <origin xyz="${-caster_offset_x} ${caster_offset_y} ${caster_offset_z}" rpy="0 0 0" />
    </pr2_caster>
    <pr2_caster suffix="br" parent="${name}_link">
      <origin xyz="${-caster_offset_x} ${-caster_offset_y} ${caster_offset_z}" rpy="0 0 0" />
    </pr2_caster>

    <!-- gazebo extensions -->
    <pr2_base_gazebo name="${name}" />

    <!-- modeling plug on base holder magnet location -->
    <pr2_plug_holder name="${name}"/>

  </macro>


  <macro name="pr2_plug_holder" params="name">
    <joint name="plug_holder_joint" type="fixed">
      <origin xyz="0.18 0 ${base_size_z+0.001/2}" rpy="0 0 0" />
      <parent link="${name}_link"/>
      <child link="plug_holder"/>
    </joint>
    <link name="plug_holder">
      <inertial>
        <mass value="0.1" />
        <origin xyz="0 0 0.0" />
        <inertia ixx="0.1" ixy="0" ixz="0" iyy="0.1" iyz="0" izz="0.1" />
      </inertial>
      <visual>
        <origin xyz="0 0 0" rpy="0 0 0" />
        <geometry>
          <box size="0.001 0.001 0.001"/>
        </geometry>
      </visual>
      <collision>
        <origin xyz="0 0 0.0" rpy="0 0 0" />
        <geometry>
          <box size=".001 .001 .001" />
        </geometry>
      </collision>
    </link>
  </macro>


</robot>
