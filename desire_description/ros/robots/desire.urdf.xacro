<?xml version="1.0"?>
<robot xmlns:sensor="http://playerstage.sourceforge.net/gazebo/xmlschema/#sensor"
       xmlns:controller="http://playerstage.sourceforge.net/gazebo/xmlschema/#controller"
       xmlns:interface="http://playerstage.sourceforge.net/gazebo/xmlschema/#interface"
       xmlns:xacro="http://playerstage.sourceforge.net/gazebo/xmlschema/#interface"
       name="desire" >
  
  <!-- The following included files set up definitions of parts of the robot body -->
  <!-- misc common stuff? -->
  <include filename="$(find cob_description)/ros/urdf/common.xacro" />

  <!-- desire calibration -->
  <include filename="$(find desire_description)/ros/calibration/desire.urdf.xacro" />
  
  <!-- desire base -->
  <include filename="$(find desire_description)/ros/urdf/base_v0/base.urdf.xacro" />
 
  <!-- desire head-->
  <include filename="$(find desire_description)/ros/urdf/head_v0/head.urdf.xacro" />

  <!-- desire arm-->
  <include filename="$(find cob_description)/ros/urdf/lbr_v0/lbr.urdf.xacro" />

  <!-- desire sdh-->
  <!--  <include filename="$(find desire_description)/ros/urdf/sdh_v0/sdh.urdf.xacro" /> -->

  <!-- generic simulator_gazebo plugins for starting mechanism control, ros time, ros battery -->
  <include filename="$(find desire_description)/ros/gazebo/gazebo.urdf.xacro" />
  
  <!-- materials for visualization -->
  <include filename="$(find cob_description)/ros/urdf/materials.urdf.xacro" />

  <!-- Now we can start using the macros included above to define the actual desire -->

  <!-- The first use of a macro.  This one was defined in base.urdf.xacro above.
       A macro like this will expand to a set of link and joint definitions, and to additional
       Gazebo-related extensions (sensor plugins, etc).  The macro takes an argument, name, 
       that equals "base", and uses it to generate names for its component links and joints 
       (e.g., base_link).  The included origin block is also an argument to the macro.  By convention, 
       the origin block defines where the component is w.r.t its parent (in this case the parent 
       is the world frame). For more, see http://www.ros.org/wiki/xacro -->

  <xacro:desire_base_v0 name="base"/>

  <xacro:desire_torso_v0 name="torso" parent="base_link">
    <origin xyz="0 0 0.390" rpy="0 0 0" />
  </xacro:desire_torso_v0>
  
  <xacro:desire_lbr_v0 name="arm_left" parent="base_link">
    <origin xyz="0.35 0.0 1.25239" rpy="3.1415926 0.7854 -1.8326" />
  </xacro:desire_lbr_v0>
  
  <!--xacro:desire_lbr_v0 name="arm_right" parent="base_link">
    <origin xyz="0.35 0.0 1.25239" rpy="-3.1415926 -0.7854 +1.8326" />
  </xacro:desire_lbr_v0-->
  
  <xacro:desire_head_v0 name="head" parent="base_link">
    <origin xyz="0.40 0 1.4246" rpy="0 0 0" />
  </xacro:desire_head_v0>
  
  <!--<xacro:desire_sdh_v0 name="sdh_left" parent="arm_left_7_link">
    <origin xyz="0 0 0" rpy="0 3.1415926 0" />
  </xacro:desire_sdh_v0>
  
  <xacro:desire_sdh_v0 name="sdh_right" parent="arm_right_7_link">
    <origin xyz="0 0 0" rpy="0 3.1415926 0" />
  </xacro:desire_sdh_v0>-->
  
</robot>
